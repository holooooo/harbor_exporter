apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: harbor-2
  name: harbor-exporter-sa
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: harbor-2
  name: harbor-exporter-role
rules:
  - apiGroups: [""]
    resources: ["pods", "configmaps", "secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: harbor-exporter-rolebinding
  namespace: harbor-2
subjects:
  - kind: ServiceAccount
    name: harbor-exporter-sa
    namespace: harbor-2
roleRef:
  kind: Role
  name: harbor-exporter-role
  apiGroup: rbac.authorization.k8s.io

---
kind: Service
apiVersion: v1
metadata:
  name: harbor-exporter
  labels:
    app: harbor-exporter
    prometheus: kube-prometheus
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9107
      protocol: TCP
  selector:
    app: harbor-exporter

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-exporter
  namespace: harbor-2
  labels:
    app: harbor-exporter
    prometheus: kube-prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor-exporter
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: harbor-exporter
        prometheus: kube-prometheus
    spec:
      serviceAccountName: harbor-exporter-sa
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: harbor-exporter
          image: "reg.ebcpaas.com/xiechuyu/harbor_exporter:v0.5.0"
          imagePullPolicy: Always
          env:
            ##          necessary in case you monitor multiple Harbor instances in your Prometheus
            #            - name: HARBOR_INSTANCE
            #              value: my_harbor
            - name: HARBOR_URI
              ##            name of the Service for harbor-core
              value: http://harbor-2-harbor-core # change prefix to the name of your Helm release
            ##            optionally use below construction to address the external endpoint of Harbor
            #              valueFrom:
            #                configMapKeyRef:
            #                  name: prefix-harbor-core # change prefix to the name of your Helm release
            #                  key: EXT_ENDPOINT
            - name: HARBOR_USERNAME
              value: "admin"
            - name: HARBOR_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: harbor-2-harbor-core # change prefix to the name of your Helm release
                  key: HARBOR_ADMIN_PASSWORD

          securityContext:
            capabilities:
              drop:
                - SETPCAP
                - MKNOD
                - AUDIT_WRITE
                - CHOWN
                - NET_RAW
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - KILL
                - SETGID
                - SETUID
                - NET_BIND_SERVICE
                - SYS_CHROOT
                - SETFCAP
            readOnlyRootFilesystem: true
          resources:
            limits:
              cpu: 400m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 64Mi
          ports:
            - containerPort: 9107
              name: http
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 1
            timeoutSeconds: 5
            periodSeconds: 5

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: harbor-exporter
  labels:
    app: harbor-exporter
    prometheus: kube-prometheus
spec:
  endpoints:
    - interval: 20s
      scrapeTimeout: 15s
      honorLabels: true
      port: http
      path: /metrics
      scheme: http
  jobLabel: "mgmt"
  selector:
    matchLabels:
      app: harbor-exporter
    namespaceSelector:
      matchNames:
        - harbor-2 # change to the namespace where you deployed Harbor
